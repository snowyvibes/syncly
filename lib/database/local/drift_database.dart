import 'dart:io';

import 'package:drift/drift.dart';
import 'package:drift/native.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:path/path.dart' as p;
import 'package:path_provider/path_provider.dart';
import 'package:syncly/features/notes/data/models/note_table.dart';
import 'package:syncly/features/notes/data/sources/local/note_dao.dart';

import '../../features/tasks/data/models/task_table.dart';
import '../../features/tasks/data/sources/local/task_dao.dart';

part 'drift_database.g.dart'; // Generated by build_runner

final appDatabaseProvider = Provider<AppDatabase>((ref) {
  final database = AppDatabase();
  ref.onDispose(() => database.close());
  return database;
});

@DriftDatabase(tables: [TaskTable, NoteTable], daos: [TaskDao, NotesDao])
class AppDatabase extends _$AppDatabase {
  AppDatabase() : super(_openConnection());

  @override
  int get schemaVersion => 1;
}

LazyDatabase _openConnection() {
  return LazyDatabase(() async {
    final dbFolder = await getApplicationDocumentsDirectory();
    final file = File(p.join(dbFolder.path, 'app.sqlite'));
    return NativeDatabase(file);
  });
}
